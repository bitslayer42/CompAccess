{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;As a developer that lacks proper design skills, Google&amp;#39;s Material design is very appealing to me. However what initially seemed like an easy way to add nice styling to my sites and apps has turned out to be not so easy.&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s the official &lt;a href=\"https://github.com/material-components/material-components-web\"&gt;Material web components&lt;/a&gt;. As far as I know there&amp;#39;s no React wrapper for this and the &lt;a href=\"https://github.com/material-components/material-components-web/tree/master/framework-examples/react/src\"&gt;examples in the repo&lt;/a&gt; are quite complicated and incomplete. This means I&amp;#39;d have to write my own wrappers which unfortunately I don&amp;#39;t have the time to do.&lt;/p&gt;\n\n&lt;p&gt;Then there&amp;#39;s &lt;a href=\"http://www.material-ui.com/#/\"&gt;Material-UI&lt;/a&gt; which is all React components and the solution I&amp;#39;m currently using. It looks great and is super easy to use &lt;strong&gt;but&lt;/strong&gt; there are some major issues with it:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Everything is inline-styled. This makes the markup a pain to read and also makes overriding those styles annoying. To override the styles you have to use a React styles object and pass it as a property to the component or use &lt;code&gt;!important&lt;/code&gt; in your CSS everywhere there&amp;#39;s a conflicting style.&lt;/li&gt;\n&lt;li&gt;It makes a mess of your markup in more ways than just inline styles, but also by using tons of divs just for super simple things like buttons. It also generates elements outside of the React root element.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Next is &lt;a href=\"http://materializecss.com/\"&gt;Materialize CSS&lt;/a&gt;. I like the SASS portion of it but in order to get the most out of it you need jQuery and their jQuery plugin.&lt;/p&gt;\n\n&lt;p&gt;Finally is the smallest one, &lt;a href=\"https://www.muicss.com/\"&gt;MUICSS&lt;/a&gt;. I like it, and I&amp;#39;ll probably end up using this, but the styling is a little different and it doesn&amp;#39;t have as many components as the others. No SASS, which is also a bit disappointing.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m also currently looking into &lt;a href=\"http://react-toolbox.com/\"&gt;React Toolbox&lt;/a&gt; which seems to be similar to Material-UI but definitely a step in the right direction in terms of customizing the styling and how the styling is applied. Unfortunately you still end up with class names applied to elements that look like &lt;code&gt;theme__button___10jV4 theme__floating___K0WdS theme__accent___2NzmD style__playground-button___1arT9&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Basically I just want to make sure I have all the possibilities out there so I can look into them all and decide on one. I love the look of MaterialUI, how easy it is to use, and how many features it has but it makes a mess of your markup and does a lot of things you&amp;#39;re normally not supposed to do.&lt;/p&gt;\n\n&lt;p&gt;There were a couple others I looked at that I don&amp;#39;t remember the names of but they all seemed to be more of the same. Is anyone using any of these and are you using them with React? Am I missing anything?&lt;/p&gt;\n\n&lt;p&gt;I just want pre-made React components that sets one single, readable class name that pulls styles from an actual stylesheet. If it has SASS and I can use those styles to create my own custom classes and then apply those classes to the React components, even better.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "As a developer that lacks proper design skills, Google's Material design is very appealing to me. However what initially seemed like an easy way to add nice styling to my sites and apps has turned out to be not so easy.\n\nThere's the official [Material web components](https://github.com/material-components/material-components-web). As far as I know there's no React wrapper for this and the [examples in the repo](https://github.com/material-components/material-components-web/tree/master/framework-examples/react/src) are quite complicated and incomplete. This means I'd have to write my own wrappers which unfortunately I don't have the time to do.\n\nThen there's [Material-UI](http://www.material-ui.com/#/) which is all React components and the solution I'm currently using. It looks great and is super easy to use **but** there are some major issues with it:\n\n* Everything is inline-styled. This makes the markup a pain to read and also makes overriding those styles annoying. To override the styles you have to use a React styles object and pass it as a property to the component or use `!important` in your CSS everywhere there's a conflicting style.\n* It makes a mess of your markup in more ways than just inline styles, but also by using tons of divs just for super simple things like buttons. It also generates elements outside of the React root element.\n\nNext is [Materialize CSS](http://materializecss.com/). I like the SASS portion of it but in order to get the most out of it you need jQuery and their jQuery plugin.\n\nFinally is the smallest one, [MUICSS](https://www.muicss.com/). I like it, and I'll probably end up using this, but the styling is a little different and it doesn't have as many components as the others. No SASS, which is also a bit disappointing.\n\nI'm also currently looking into [React Toolbox](http://react-toolbox.com/) which seems to be similar to Material-UI but definitely a step in the right direction in terms of customizing the styling and how the styling is applied. Unfortunately you still end up with class names applied to elements that look like `theme__button___10jV4 theme__floating___K0WdS theme__accent___2NzmD style__playground-button___1arT9`.\n\nBasically I just want to make sure I have all the possibilities out there so I can look into them all and decide on one. I love the look of MaterialUI, how easy it is to use, and how many features it has but it makes a mess of your markup and does a lot of things you're normally not supposed to do.\n\nThere were a couple others I looked at that I don't remember the names of but they all seemed to be more of the same. Is anyone using any of these and are you using them with React? Am I missing anything?\n\nI just want pre-made React components that sets one single, readable class name that pulls styles from an actual stylesheet. If it has SASS and I can use those styles to create my own custom classes and then apply those classes to the React components, even better.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5p1rin", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "MrXyfir", "media": null, "name": "t3_5p1rin", "score": 27, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/JELDVdoX_Zt6iK3GiQMRJRNPlICNJ4FmwedjjtzZ-Ec.jpg?s=c0269edd588818b9f7db89b87d10d39a", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/JELDVdoX_Zt6iK3GiQMRJRNPlICNJ4FmwedjjtzZ-Ec.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=d2cf2e7f3143611e4ea72a271ea34d25", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/JELDVdoX_Zt6iK3GiQMRJRNPlICNJ4FmwedjjtzZ-Ec.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=de55645d6bcf21e0bff93ca27e5c04cc", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/JELDVdoX_Zt6iK3GiQMRJRNPlICNJ4FmwedjjtzZ-Ec.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=f6d29d1fda6740158a9ad8cc6d8868d8", "width": 320, "height": 320}], "variants": {}, "id": "CI8RIiRHxsiL5SZmI9nuQRzrb3y6jtBjuWj5CCf_Kew"}]}, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "self", "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5p1rin/whats_the_best_way_to_use_material_design_with/", "locked": false, "stickied": false, "created": 1484914370.0, "url": "https://www.reddit.com/r/reactjs/comments/5p1rin/whats_the_best_way_to_use_material_design_with/", "author_flair_text": null, "quarantine": false, "title": "What's the best way to use Material design with React?", "created_utc": 1484885570.0, "link_flair_text": null, "distinguished": null, "num_comments": 13, "visited": false, "num_reports": null, "ups": 27}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Could somebody please offer insight into creating page transitions while using react router?&lt;/p&gt;\n\n&lt;p&gt;I have tried following this article:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://medium.com/front-end-hacking/react-page-transition-animations-9d18c90a9831#.fqqvh7qwg\"&gt;https://medium.com/front-end-hacking/react-page-transition-animations-9d18c90a9831#.fqqvh7qwg&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;but I cannot get it to work. Also, it&amp;#39;s rather difficult as the demo is a dead link and I can&amp;#39;t see a working version. &lt;/p&gt;\n\n&lt;p&gt;Are there any websites or tutorials with working versions somebody could recommend?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Could somebody please offer insight into creating page transitions while using react router?\n\nI have tried following this article:\n\nhttps://medium.com/front-end-hacking/react-page-transition-animations-9d18c90a9831#.fqqvh7qwg\n\nbut I cannot get it to work. Also, it's rather difficult as the demo is a dead link and I can't see a working version. \n\nAre there any websites or tutorials with working versions somebody could recommend?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5p3ka0", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "JonnyBoggon", "media": null, "name": "t3_5p3ka0", "score": 5, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/HpyYK2UOa_CcqstSU6OeHToTzMhr4bUxUf-LB_I4-W0.jpg?s=ea47db248cdd077baf73a01d2eda2b78", "width": 1000, "height": 1000}, "resolutions": [{"url": "https://i.redditmedia.com/HpyYK2UOa_CcqstSU6OeHToTzMhr4bUxUf-LB_I4-W0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=ba6e0402be5fdafb68743e3f08429b02", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/HpyYK2UOa_CcqstSU6OeHToTzMhr4bUxUf-LB_I4-W0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=59d1b051d83ffae3d0f5a98e0caa5d34", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/HpyYK2UOa_CcqstSU6OeHToTzMhr4bUxUf-LB_I4-W0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=daed79223e27b94bcc277699f9f5074a", "width": 320, "height": 320}, {"url": "https://i.redditmedia.com/HpyYK2UOa_CcqstSU6OeHToTzMhr4bUxUf-LB_I4-W0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=3c58e9b8e2899b695128b643a3438917", "width": 640, "height": 640}, {"url": "https://i.redditmedia.com/HpyYK2UOa_CcqstSU6OeHToTzMhr4bUxUf-LB_I4-W0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=4f79f7dc8bbaeb65bdd4034bfad64d16", "width": 960, "height": 960}], "variants": {}, "id": "UYrneIRdGqeJfL69eV4_a1Fp9UOrOzubGiiisAx9lsI"}]}, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "self", "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5p3ka0/react_router_and_page_transitions/", "locked": false, "stickied": false, "created": 1484943546.0, "url": "https://www.reddit.com/r/reactjs/comments/5p3ka0/react_router_and_page_transitions/", "author_flair_text": null, "quarantine": false, "title": "React router and page transitions", "created_utc": 1484914746.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m building a website the has 4 main &amp;quot;views&amp;quot; or pages, and a few subviews within those. The basic layout is 4 large buttons that when clicked show some content. That content may have some buttons that can be clicked to display a bit more information. It&amp;#39;s an informational kiosk type app that will run on ipads and/or touchscreens, to give some context&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve built a the hello world and todo starter projects, but looking for ideas and or boilerplates to build this app out. There are so many choices having a hard time getting started. I am using this simple app to learn about react. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm building a website the has 4 main \"views\" or pages, and a few subviews within those. The basic layout is 4 large buttons that when clicked show some content. That content may have some buttons that can be clicked to display a bit more information. It's an informational kiosk type app that will run on ipads and/or touchscreens, to give some context\n\nI've built a the hello world and todo starter projects, but looking for ideas and or boilerplates to build this app out. There are so many choices having a hard time getting started. I am using this simple app to learn about react. ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5p3xbo", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "normalize", "media": null, "name": "t3_5p3xbo", "score": 2, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": true, "spoiler": false, "permalink": "/r/reactjs/comments/5p3xbo/recommend_a_starting_project_for_pretty_simple/", "locked": false, "stickied": false, "created": 1484948526.0, "url": "https://www.reddit.com/r/reactjs/comments/5p3xbo/recommend_a_starting_project_for_pretty_simple/", "author_flair_text": null, "quarantine": false, "title": "Recommend a starting project for pretty simple project", "created_utc": 1484919726.0, "link_flair_text": null, "distinguished": null, "num_comments": 2, "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "kubosj.wordpress.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5p3f4c", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "kubosj", "media": null, "name": "t3_5p3f4c", "score": 2, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Y9coYKqs3_fueRoohAb0ElHLMWODi2_aDgEaQT9nV7Y.jpg?s=885b39f6786826216a61295a3b9d2f2c", "width": 1665, "height": 909}, "resolutions": [{"url": "https://i.redditmedia.com/Y9coYKqs3_fueRoohAb0ElHLMWODi2_aDgEaQT9nV7Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=19b9a00ae8d085a118de9d04b72cf42a", "width": 108, "height": 58}, {"url": "https://i.redditmedia.com/Y9coYKqs3_fueRoohAb0ElHLMWODi2_aDgEaQT9nV7Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=8cfb0ed6f3fd413b88436346a8a25c47", "width": 216, "height": 117}, {"url": "https://i.redditmedia.com/Y9coYKqs3_fueRoohAb0ElHLMWODi2_aDgEaQT9nV7Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=80d985f2a19f5ebe28f0cbf55e3cb056", "width": 320, "height": 174}, {"url": "https://i.redditmedia.com/Y9coYKqs3_fueRoohAb0ElHLMWODi2_aDgEaQT9nV7Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=7c0746ed0ea89e31dd21b9e3dae3fd5f", "width": 640, "height": 349}, {"url": "https://i.redditmedia.com/Y9coYKqs3_fueRoohAb0ElHLMWODi2_aDgEaQT9nV7Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=85c9ab8e174d5876a13a2126a55ca9d6", "width": 960, "height": 524}, {"url": "https://i.redditmedia.com/Y9coYKqs3_fueRoohAb0ElHLMWODi2_aDgEaQT9nV7Y.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=7ca8e413850026ffb5e8bfb13d4b913f", "width": 1080, "height": 589}], "variants": {}, "id": "8CwLCiV3qe3glD9laeL8ZcMkwWErot8o9K6KjiXY-vU"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/L1JE4nDT51zjfCgwDXj77XeampNlQAPyQeKyrAsPjXw.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5p3f4c/embedding_react_into_legacy_web_pages/", "locked": false, "stickied": false, "created": 1484941161.0, "url": "https://kubosj.wordpress.com/2017/01/20/embedding-react-into-legacy-web-pages/", "author_flair_text": null, "quarantine": false, "title": "Embedding React into legacy web pages", "created_utc": 1484912361.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, I have &lt;a href=\"http://pastebin.com/YhqMx42P\"&gt;this&lt;/a&gt; pretty basic webpack setup defined. It works nice, but I&amp;#39;d like to be able to save the images specific to a component in the folder this component is defined, when developing. When making a production build, I&amp;#39;d like all the images to sit together in a static assets folder. Just like create-react-app does. &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m using url-loader and file-loader for the images right now, but have no idea how to go about the production thing. Would this require a complex setup with gulp etc or can I do this easily with webpack?&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello, I have [this](http://pastebin.com/YhqMx42P) pretty basic webpack setup defined. It works nice, but I'd like to be able to save the images specific to a component in the folder this component is defined, when developing. When making a production build, I'd like all the images to sit together in a static assets folder. Just like create-react-app does. \n\nI'm using url-loader and file-loader for the images right now, but have no idea how to go about the production thing. Would this require a complex setup with gulp etc or can I do this easily with webpack?\n\nThanks in advance.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5p48mw", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Devvvvvv", "media": null, "name": "t3_5p48mw", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/apn0jimBDcu7v5NrQv4_AjqWqHWQMnATxOAbLbDgyQw.jpg?s=ff05b930089d958e41fd566f183592c6", "width": 250, "height": 250}, "resolutions": [{"url": "https://i.redditmedia.com/apn0jimBDcu7v5NrQv4_AjqWqHWQMnATxOAbLbDgyQw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=05f69610841f8c419b3d580bf1b2dac1", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/apn0jimBDcu7v5NrQv4_AjqWqHWQMnATxOAbLbDgyQw.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=2abff01ac7255b4a197afb5fb03b0048", "width": 216, "height": 216}], "variants": {}, "id": "tEFaKdpbTuSBBWpWQ-kmQ1l_KwNUpQtPpUtOwmLiL-A"}]}, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "self", "is_self": true, "hide_score": true, "spoiler": false, "permalink": "/r/reactjs/comments/5p48mw/webpack_question_how_to_keep_images_in_component/", "locked": false, "stickied": false, "created": 1484952162.0, "url": "https://www.reddit.com/r/reactjs/comments/5p48mw/webpack_question_how_to_keep_images_in_component/", "author_flair_text": null, "quarantine": false, "title": "Webpack question: how to keep images in component folder for development but put them in assets folder for production?", "created_utc": 1484923362.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was just wondering what the reasoning was behind using &lt;code&gt;/&amp;gt;&lt;/code&gt; for example &lt;code&gt;&amp;lt;App /&amp;gt;&lt;/code&gt; instead of just &lt;code&gt;&amp;lt;App&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I was just wondering what the reasoning was behind using `/&gt;` for example `&lt;App /&gt;` instead of just `&lt;App&gt;`.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5p4608", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "i-hate-animals", "media": null, "name": "t3_5p4608", "score": 0, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": true, "spoiler": false, "permalink": "/r/reactjs/comments/5p4608/why_do_we_use_for_components/", "locked": false, "stickied": false, "created": 1484951364.0, "url": "https://www.reddit.com/r/reactjs/comments/5p4608/why_do_we_use_for_components/", "author_flair_text": null, "quarantine": false, "title": "Why do we use /&gt; for components?", "created_utc": 1484922564.0, "link_flair_text": null, "distinguished": null, "num_comments": 2, "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Yeah i could probably just research this, but thought i may as well start a conversation and get some opinions. Ive gone from full stack development using laravel and basic frontend techs, to building mobile apps with react native. Now i want to use what ive learnt back in building web apps.  Am i safe to assume that react js fundamentals are very similar to react native or should i brush up on some react js beginner courses?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Yeah i could probably just research this, but thought i may as well start a conversation and get some opinions. Ive gone from full stack development using laravel and basic frontend techs, to building mobile apps with react native. Now i want to use what ive learnt back in building web apps.  Am i safe to assume that react js fundamentals are very similar to react native or should i brush up on some react js beginner courses?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5p3m48", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "b8ne", "media": null, "name": "t3_5p3m48", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5p3m48/coming_from_react_native/", "locked": false, "stickied": false, "created": 1484944317.0, "url": "https://www.reddit.com/r/reactjs/comments/5p3m48/coming_from_react_native/", "author_flair_text": null, "quarantine": false, "title": "Coming from react native", "created_utc": 1484915517.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am tired of seeing &amp;#39;React Beginner Course&amp;#39; or &amp;#39;Redux for Beginners&amp;#39;. Are there any serious advanced courses tutorials out there that talks more than a todo list?\nThanks,&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am tired of seeing 'React Beginner Course' or 'Redux for Beginners'. Are there any serious advanced courses tutorials out there that talks more than a todo list?\nThanks,", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5oxxcu", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "timurcat99", "media": null, "name": "t3_5oxxcu", "score": 31, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5oxxcu/there_are_bunch_of_react_beginnerredux_courses/", "locked": false, "stickied": false, "created": 1484876031.0, "url": "https://www.reddit.com/r/reactjs/comments/5oxxcu/there_are_bunch_of_react_beginnerredux_courses/", "author_flair_text": null, "quarantine": false, "title": "There are Bunch of React Beginner/Redux Courses Out There... any Advanced Courses/Tutorials Exist?", "created_utc": 1484847231.0, "link_flair_text": null, "distinguished": null, "num_comments": 14, "visited": false, "num_reports": null, "ups": 31}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "twitter.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5p0bhf", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "dariocravero", "media": null, "name": "t3_5p0bhf", "score": 5, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Bj7GHvoS0nqZuuAr6Nm5MZ4tfl51nC57pYTq76jMvVM.jpg?s=f770425f78890edad149f879c3361ae5", "width": 2048, "height": 1255}, "resolutions": [{"url": "https://i.redditmedia.com/Bj7GHvoS0nqZuuAr6Nm5MZ4tfl51nC57pYTq76jMvVM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=19a8a5d973e99084e1501bd5f7c6384c", "width": 108, "height": 66}, {"url": "https://i.redditmedia.com/Bj7GHvoS0nqZuuAr6Nm5MZ4tfl51nC57pYTq76jMvVM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=6731f59f989e75a15f291a6e8c0a458c", "width": 216, "height": 132}, {"url": "https://i.redditmedia.com/Bj7GHvoS0nqZuuAr6Nm5MZ4tfl51nC57pYTq76jMvVM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=bf34fb597d1bdd25bf0300b104868da3", "width": 320, "height": 196}, {"url": "https://i.redditmedia.com/Bj7GHvoS0nqZuuAr6Nm5MZ4tfl51nC57pYTq76jMvVM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=ccc6aee0446ee7514cab7eb000ce1ac9", "width": 640, "height": 392}, {"url": "https://i.redditmedia.com/Bj7GHvoS0nqZuuAr6Nm5MZ4tfl51nC57pYTq76jMvVM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=378688bb16c873ea2416f12e99dc8228", "width": 960, "height": 588}, {"url": "https://i.redditmedia.com/Bj7GHvoS0nqZuuAr6Nm5MZ4tfl51nC57pYTq76jMvVM.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=13995012ab57b9ad012a7d942200668a", "width": 1080, "height": 661}], "variants": {}, "id": "AyDQsZGE9JyJvsAjUBJ6UbWyMsNzX0xn3cySOuaEYBQ"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/K1qNhaFO8DiDxzYLeVKC7ShSME3WlbtCJrpGUUCoeZw.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5p0bhf/import_from_sketch_into_viewsdx_morph_to_react/", "locked": false, "stickied": false, "created": 1484898066.0, "url": "https://twitter.com/dariocravero/status/822200422601555969", "author_flair_text": null, "quarantine": false, "title": "Import from #Sketch into #ViewsDX \u2705. Morph to React. This Is Massive.", "created_utc": 1484869266.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello,&lt;/p&gt;\n\n&lt;p&gt;I am building a course website. At the end, I would like to generate a beautiful pdf for the user. I am aware of the Markdown-pdf package but I was looking for a little bit of styling.&lt;/p&gt;\n\n&lt;p&gt;The whole website is built using create-react-app. Any react component. &lt;/p&gt;\n\n&lt;p&gt;One of the thing that I found that the spectacle editor has an option from export as pdf. Anyone any idea how did they do it?\nCan anyone suggest how to go on and do it?&lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello,\n\nI am building a course website. At the end, I would like to generate a beautiful pdf for the user. I am aware of the Markdown-pdf package but I was looking for a little bit of styling.\n\nThe whole website is built using create-react-app. Any react component. \n\nOne of the thing that I found that the spectacle editor has an option from export as pdf. Anyone any idea how did they do it?\nCan anyone suggest how to go on and do it?\n\nThanks\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5p2qsa", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "geek--god", "media": null, "name": "t3_5p2qsa", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5p2qsa/generating_beautiful_pdfs_for_react_website/", "locked": false, "stickied": false, "created": 1484928759.0, "url": "https://www.reddit.com/r/reactjs/comments/5p2qsa/generating_beautiful_pdfs_for_react_website/", "author_flair_text": null, "quarantine": false, "title": "Generating beautiful pdfs for React website?", "created_utc": 1484899959.0, "link_flair_text": null, "distinguished": null, "num_comments": 2, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Say on load I want to fetch and populate the store with data, where do I put this? Layout componentWillMount? &lt;/p&gt;\n\n&lt;p&gt;Layout needs this data to render correctly, so it needs to wait for the asynchronous fetch to complete... &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Say on load I want to fetch and populate the store with data, where do I put this? Layout componentWillMount? \n\nLayout needs this data to render correctly, so it needs to wait for the asynchronous fetch to complete... ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5p0eup", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "madcaesar", "media": null, "name": "t3_5p0eup", "score": 2, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5p0eup/how_where_do_you_put_code_needed_on_app/", "locked": false, "stickied": false, "created": 1484899046.0, "url": "https://www.reddit.com/r/reactjs/comments/5p0eup/how_where_do_you_put_code_needed_on_app/", "author_flair_text": null, "quarantine": false, "title": "How / where do you put code needed on app initialization?", "created_utc": 1484870246.0, "link_flair_text": null, "distinguished": null, "num_comments": 3, "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "appendto.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5p14xj", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "kylebythemile", "media": null, "name": "t3_5p14xj", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/SQmtP8sZ_KVQ7ro86Nxtqbm7pv_9vGRYQasz4WHkcno.jpg?s=666b08d702fd9102b613696796eb024a", "width": 300, "height": 140}, "resolutions": [{"url": "https://i.redditmedia.com/SQmtP8sZ_KVQ7ro86Nxtqbm7pv_9vGRYQasz4WHkcno.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=8ad5dbf3e11f262813db5ae0abde322b", "width": 108, "height": 50}, {"url": "https://i.redditmedia.com/SQmtP8sZ_KVQ7ro86Nxtqbm7pv_9vGRYQasz4WHkcno.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=35c1ca12d95578caf11c525dc8344197", "width": 216, "height": 100}], "variants": {}, "id": "6-DU1uRDjVj1MLweYNbxm9T8aMz-XOV8yO5aoKkR1FI"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/EnqhyDs9tjn6YlZdoTdkT7CdzqlqT8xAHnNtPtd8zjM.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5p14xj/3_libraries_and_3_ways_to_handle_ajax_in_react/", "locked": false, "stickied": false, "created": 1484906892.0, "url": "https://appendto.com/2017/01/3-libraries-and-3-ways-to-handle-ajax-in-react-apps/", "author_flair_text": null, "quarantine": false, "title": "3 Libraries and 3 Ways to Handle AJAX in React Apps", "created_utc": 1484878092.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "thereactionary.net", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5ozoq3", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "oz_revulsion", "media": null, "name": "t3_5ozoq3", "score": 2, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/d9Rb1vxoWZmb2RYEPkSwvZjrl0tswL3dvcGkpqdCHYg.jpg?s=16f963a014a6954bd0280eb1846a794a", "width": 880, "height": 478}, "resolutions": [{"url": "https://i.redditmedia.com/d9Rb1vxoWZmb2RYEPkSwvZjrl0tswL3dvcGkpqdCHYg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=fdaafc0bbc1d8936805c2b07921d0d37", "width": 108, "height": 58}, {"url": "https://i.redditmedia.com/d9Rb1vxoWZmb2RYEPkSwvZjrl0tswL3dvcGkpqdCHYg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=a80be1f7e42acbe587ae15632022df26", "width": 216, "height": 117}, {"url": "https://i.redditmedia.com/d9Rb1vxoWZmb2RYEPkSwvZjrl0tswL3dvcGkpqdCHYg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=511a62fc6534e775c3bba412d43eba5a", "width": 320, "height": 173}, {"url": "https://i.redditmedia.com/d9Rb1vxoWZmb2RYEPkSwvZjrl0tswL3dvcGkpqdCHYg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=a730b4b9e2a9a4959197a60964ece9d6", "width": 640, "height": 347}], "variants": {}, "id": "-kSeROk7bTTxyY0oTOT4-YfTZjGhoMA7_-M7siL1-Bk"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/0gSAP_FxH0UOec_8cLCRrP0j4e6lbFAxDWr00htf9kk.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5ozoq3/making_a_memorable_entrance_or_exit_how_to_use/", "locked": false, "stickied": false, "created": 1484891859.0, "url": "http://thereactionary.net/making-a-memorable-entrance-or-exit-how-to-use-reactcsstransitiongroup/", "author_flair_text": null, "quarantine": false, "title": "Making a memorable entrance (or exit): How to use ReactCSSTransitionGroup", "created_utc": 1484863059.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a problem that I am not sure how to solve. I am trying to make webpack to create my production in a way that, I can deploy it in one click but also have minimum configuration on it. My webpack code currently creates two entry files -- one for the server and another one for the client -- there are also lots of assets.&lt;/p&gt;\n\n&lt;p&gt;Currently, they go to two different directories (&amp;quot;/dist&amp;quot; and &amp;quot;/dist/assets&amp;quot;). Currently, my webpack code creates both of these entries in two commands by passing different environmental variables. Here is my webpack config for production (I did not include the base webpack file, which is just loaders and resolve):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;const webpack = require(&amp;#39;webpack&amp;#39;);\nconst ExtractTextPlugin = require(&amp;#39;extract-text-webpack-plugin&amp;#39;);\nconst nodeExternals = require(&amp;#39;webpack-node-externals&amp;#39;);\nconst path = require(&amp;#39;path&amp;#39;);\n\nconst base = {\n    plugins: [\n        new webpack.optimize.UglifyJsPlugin({\n            compress: { warnings: false },\n            mangle: true,\n            minify: true\n        }),\n        new webpack.optimize.DedupePlugin(),\n        new ExtractTextPlugin(&amp;#39;app.css&amp;#39;),\n        new webpack.DefinePlugin({\n            &amp;#39;process.env&amp;#39;: {\n                NODE_ENV: JSON.stringify(&amp;#39;production&amp;#39;),\n            }\n        })\n    ]\n};\n\nconst serverConfig = {\n    entry: &amp;#39;./src/server.jsx&amp;#39;,\n    output: {\n        path: path.join(__dirname, &amp;#39;/../dist&amp;#39;),\n        filename: &amp;#39;server.js&amp;#39;,\n        publicPath: &amp;#39;/dist/&amp;#39;\n    },\n    target: &amp;#39;node&amp;#39;,\n    externals: nodeExternals()\n};\n\nconst clientConfig = {\n    entry: &amp;#39;./src/client.jsx&amp;#39;,\n    output: {\n        path: path.join(__dirname, &amp;#39;/../dist/assets&amp;#39;),\n        filename: &amp;#39;app.js&amp;#39;,\n        publicPath: &amp;#39;/dist/assets/&amp;#39;\n    }\n};\n\nif (process.env.BUILD === &amp;#39;server&amp;#39;) {\n    module.exports = Object.assign(serverConfig, base);\n} else if (process.env.BUILD === &amp;#39;client&amp;#39;) {\n    module.exports = Object.assign(clientConfig, base);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;How can I make these both to be created in a single webpack run? I am creating two directories because I will be exposing the client file to public and I do not want to expose the server file to the public. Or is what I am doing a bad idea?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have a problem that I am not sure how to solve. I am trying to make webpack to create my production in a way that, I can deploy it in one click but also have minimum configuration on it. My webpack code currently creates two entry files -- one for the server and another one for the client -- there are also lots of assets.\n\nCurrently, they go to two different directories (\"/dist\" and \"/dist/assets\"). Currently, my webpack code creates both of these entries in two commands by passing different environmental variables. Here is my webpack config for production (I did not include the base webpack file, which is just loaders and resolve):\n\n\tconst webpack = require('webpack');\n\tconst ExtractTextPlugin = require('extract-text-webpack-plugin');\n\tconst nodeExternals = require('webpack-node-externals');\n\tconst path = require('path');\n\n\tconst base = {\n\t\tplugins: [\n\t\t\tnew webpack.optimize.UglifyJsPlugin({\n\t\t\t\tcompress: { warnings: false },\n\t\t\t\tmangle: true,\n\t\t\t\tminify: true\n\t\t\t}),\n\t\t\tnew webpack.optimize.DedupePlugin(),\n\t\t\tnew ExtractTextPlugin('app.css'),\n\t\t\tnew webpack.DefinePlugin({\n\t\t\t\t'process.env': {\n\t\t\t\t\tNODE_ENV: JSON.stringify('production'),\n\t\t\t\t}\n\t\t\t})\n\t\t]\n\t};\n\n\tconst serverConfig = {\n\t\tentry: './src/server.jsx',\n\t\toutput: {\n\t\t\tpath: path.join(__dirname, '/../dist'),\n\t\t\tfilename: 'server.js',\n\t\t\tpublicPath: '/dist/'\n\t\t},\n\t\ttarget: 'node',\n\t\texternals: nodeExternals()\n\t};\n\n\tconst clientConfig = {\n\t\tentry: './src/client.jsx',\n\t\toutput: {\n\t\t\tpath: path.join(__dirname, '/../dist/assets'),\n\t\t\tfilename: 'app.js',\n\t\t\tpublicPath: '/dist/assets/'\n\t\t}\n\t};\n\n\tif (process.env.BUILD === 'server') {\n\t\tmodule.exports = Object.assign(serverConfig, base);\n\t} else if (process.env.BUILD === 'client') {\n\t\tmodule.exports = Object.assign(clientConfig, base);\n\t}\n\nHow can I make these both to be created in a single webpack run? I am creating two directories because I will be exposing the client file to public and I do not want to expose the server file to the public. Or is what I am doing a bad idea?\n\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5ozr5g", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "GasimGasimzada", "media": null, "name": "t3_5ozr5g", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5ozr5g/react_ssr_webpack_how_to_build_my_module_by/", "locked": false, "stickied": false, "created": 1484892477.0, "url": "https://www.reddit.com/r/reactjs/comments/5ozr5g/react_ssr_webpack_how_to_build_my_module_by/", "author_flair_text": null, "quarantine": false, "title": "React SSR + Webpack -- How to build my module by creating both server file, client file, and extract CSS?", "created_utc": 1484863677.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "blogs.taiga.nl", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5ovogd", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "avi00", "media": null, "name": "t3_5ovogd", "score": 4, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/9gEt2YZqsbxUSZnb96CpwlmzXm_ljiB4dI5EmCNzvRs.jpg?s=724766dfc42eb536c42c2160d18aa897", "width": 579, "height": 480}, "resolutions": [{"url": "https://i.redditmedia.com/9gEt2YZqsbxUSZnb96CpwlmzXm_ljiB4dI5EmCNzvRs.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=a0cc87371b76184fe343d45f30b0c3d1", "width": 108, "height": 89}, {"url": "https://i.redditmedia.com/9gEt2YZqsbxUSZnb96CpwlmzXm_ljiB4dI5EmCNzvRs.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=37ec5254cff57e43f4de33ddd66e3a5d", "width": 216, "height": 179}, {"url": "https://i.redditmedia.com/9gEt2YZqsbxUSZnb96CpwlmzXm_ljiB4dI5EmCNzvRs.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=5bee89366c06c893b1d69bb6402f2e7a", "width": 320, "height": 265}], "variants": {}, "id": "n69wHOeGjz9cDn4EaotGUQ355d9M7HaQxcw4qIsEEYE"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/X5aYexQAEsbg8akjooVRLpcsEWcy1C8ICJl5I1jAGDo.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5ovogd/develop_reactjs_aspnet_web_api_apps_in_visual/", "locked": false, "stickied": false, "created": 1484847044.0, "url": "http://blogs.taiga.nl/martijn/2015/12/10/develop-reactjs-asp-net-web-api-apps-in-visual-studio-2015/", "author_flair_text": null, "quarantine": false, "title": "Develop ReactJS + ASP.NET Web API apps in Visual Studio 2015", "created_utc": 1484818244.0, "link_flair_text": null, "distinguished": null, "num_comments": 2, "visited": false, "num_reports": null, "ups": 4}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi folks, pretty new to React and JS (Flash Dev migrating to JS) so maybe my question might sound stupid.&lt;/p&gt;\n\n&lt;p&gt;I have two &amp;quot;classes&amp;quot;:&lt;/p&gt;\n\n&lt;p&gt;BaseOverlay.tsx&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import &amp;#39;./BaseOverlay.scss&amp;#39;;\nimport * as React from &amp;#39;react&amp;#39;;\n\nimport SimpleButton from &amp;#39;../Core/Buttons/SimpleButton&amp;#39;; // non web gl button\n\nexport interface IBaseOverlayProps {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  tileHeight: number;\n  tileWidth: number;\n  title: string;\n  onClose: React.EventHandler&amp;lt;React.MouseEvent&amp;lt;HTMLDivElement&amp;gt;&amp;gt;;\n}\n\nexport interface IBaseOverlayState {\n}\n\nexport default class BaseOverlay extends React.Component&amp;lt;IBaseOverlayProps, IBaseOverlayState&amp;gt; {\n\n  constructor(props: IBaseOverlayProps) {\n    super(props);\n  }\n\n  public render(): React.ReactElement&amp;lt;any&amp;gt; {\n\n    let bg: JSX.Element = this._renderBackground();\n\n    return (\n      &amp;lt;div className=&amp;quot;BaseOverlay&amp;quot; style={{\n        height: this.props.height,\n        top: this.props.y,\n        width: this.props.width,\n      }}&amp;gt;\n        {bg}\n        &amp;lt;div className=&amp;quot;BaseOverlay__overlay-title&amp;quot; ref=&amp;quot;BaseOverlayTitle&amp;quot;&amp;gt;{this.props.title}&amp;lt;/div&amp;gt;\n        &amp;lt;div className=&amp;quot;BaseOverlay__overlay-close-btn&amp;quot; style={{ right: 30, top: 30 }}&amp;gt;\n          &amp;lt;SimpleButton\n            outImage={require(&amp;#39;../../../resources/images/buttons/btnCloseGold.png&amp;#39;)}\n            overImage={require(&amp;#39;../../../resources/images/buttons/btnCloseGold_over.png&amp;#39;)}\n            click={this.props.onClose}\n            /&amp;gt;\n        &amp;lt;/div&amp;gt;\n      &amp;lt;/div&amp;gt;\n    );\n  }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And SimpleMessageOverlay.tsx&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import &amp;#39;./SimpleMessageOverlay.scss&amp;#39;;\nimport * as React from &amp;#39;react&amp;#39;;\n\nimport BaseOverlay from &amp;#39;./BaseOverlay&amp;#39;;\n\nexport interface ISimpleMessageOverlayProps {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  tileHeight: number;\n  tileWidth: number;\n  title: string;\n  copy: string;\n  onClose: React.EventHandler&amp;lt;React.MouseEvent&amp;lt;HTMLDivElement&amp;gt;&amp;gt;;\n}\n\nexport interface ISimpleMessageOverlayState {\n}\n\nexport default class SimpleMessageOverlay extends React.Component&amp;lt;ISimpleMessageOverlayProps, ISimpleMessageOverlayState&amp;gt; {\n\n    constructor(props: ISimpleMessageOverlayProps) {\n        super(props);\n    }\n\n    public render(): React.ReactElement&amp;lt;any&amp;gt; {\n    return (\n           &amp;lt;div&amp;gt;\n                &amp;lt;BaseOverlay\n                    x={this.props.x}\n                    y={this.props.y}\n                    width={this.props.width}\n                    height={this.props.height}\n                    title={this.props.title}\n                    tileHeight={this.props.tileHeight}\n                    tileWidth={this.props.tileWidth}\n                    onClose={this.props.onClose} /&amp;gt;\n                    &amp;lt;div className=&amp;quot;SimpleMessageOverlay__overlay-copy&amp;quot;\n                    style={{maxWidth:this.props.width - 80, top:-(this.props.height - 190)}}&amp;gt;{this.props.copy}&amp;lt;/div&amp;gt;\n            &amp;lt;/div&amp;gt;\n    );\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Every class has a css file&lt;/p&gt;\n\n&lt;p&gt;BaseOverlay.scss&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;.BaseOverlay {\n    position: relative;\n    margin: 0 auto 0 auto;\n}\n\n.overlay-copy {\n    font-family: Montserrat, sans-serif;\n    position: absolute;\n    width: 100%;\n    text-align: center;\n}\n\n.BaseOverlay__overlay-background {\n    position: absolute;\n}\n\n.BaseOverlay__overlay-close-btn {\n    position: absolute;\n    top: 50px;\n    right: 50px;\n}\n\n.BaseOverlay__overlay-title {\n    @extend .overlay-copy;\n    top: 50px;\n    font-size: 40px;\n    font-weight: bold;\n    color: #190E38;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;My question is: in SimpleMessageOverlay.scss how the hell can I change the size/font/whatever of the title (BaseOverlay__overlay-title to be precise but I have no idea how to access that from the SimpleMessageOverlay class)? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi folks, pretty new to React and JS (Flash Dev migrating to JS) so maybe my question might sound stupid.\n\nI have two \"classes\":\n\nBaseOverlay.tsx\n\n    import './BaseOverlay.scss';\n    import * as React from 'react';\n    \n    import SimpleButton from '../Core/Buttons/SimpleButton'; // non web gl button\n    \n    export interface IBaseOverlayProps {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n      tileHeight: number;\n      tileWidth: number;\n      title: string;\n      onClose: React.EventHandler&lt;React.MouseEvent&lt;HTMLDivElement&gt;&gt;;\n    }\n    \n    export interface IBaseOverlayState {\n    }\n    \n    export default class BaseOverlay extends React.Component&lt;IBaseOverlayProps, IBaseOverlayState&gt; {\n    \n      constructor(props: IBaseOverlayProps) {\n        super(props);\n      }\n    \n      public render(): React.ReactElement&lt;any&gt; {\n    \n        let bg: JSX.Element = this._renderBackground();\n    \n        return (\n          &lt;div className=\"BaseOverlay\" style={{\n            height: this.props.height,\n            top: this.props.y,\n            width: this.props.width,\n          }}&gt;\n            {bg}\n            &lt;div className=\"BaseOverlay__overlay-title\" ref=\"BaseOverlayTitle\"&gt;{this.props.title}&lt;/div&gt;\n            &lt;div className=\"BaseOverlay__overlay-close-btn\" style={{ right: 30, top: 30 }}&gt;\n              &lt;SimpleButton\n                outImage={require('../../../resources/images/buttons/btnCloseGold.png')}\n                overImage={require('../../../resources/images/buttons/btnCloseGold_over.png')}\n                click={this.props.onClose}\n                /&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        );\n      }\n\nAnd SimpleMessageOverlay.tsx\n\n    import './SimpleMessageOverlay.scss';\n    import * as React from 'react';\n    \n    import BaseOverlay from './BaseOverlay';\n    \n    export interface ISimpleMessageOverlayProps {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n      tileHeight: number;\n      tileWidth: number;\n      title: string;\n      copy: string;\n      onClose: React.EventHandler&lt;React.MouseEvent&lt;HTMLDivElement&gt;&gt;;\n    }\n    \n    export interface ISimpleMessageOverlayState {\n    }\n    \n    export default class SimpleMessageOverlay extends React.Component&lt;ISimpleMessageOverlayProps, ISimpleMessageOverlayState&gt; {\n    \n        constructor(props: ISimpleMessageOverlayProps) {\n            super(props);\n        }\n    \n        public render(): React.ReactElement&lt;any&gt; {\n        return (\n               &lt;div&gt;\n                    &lt;BaseOverlay\n                        x={this.props.x}\n                        y={this.props.y}\n                        width={this.props.width}\n                        height={this.props.height}\n                        title={this.props.title}\n                        tileHeight={this.props.tileHeight}\n                        tileWidth={this.props.tileWidth}\n                        onClose={this.props.onClose} /&gt;\n                        &lt;div className=\"SimpleMessageOverlay__overlay-copy\"\n                        style={{maxWidth:this.props.width - 80, top:-(this.props.height - 190)}}&gt;{this.props.copy}&lt;/div&gt;\n                &lt;/div&gt;\n        );\n      }\n    }\n\nEvery class has a css file\n\nBaseOverlay.scss\n\n    .BaseOverlay {\n        position: relative;\n        margin: 0 auto 0 auto;\n    }\n    \n    .overlay-copy {\n        font-family: Montserrat, sans-serif;\n        position: absolute;\n        width: 100%;\n        text-align: center;\n    }\n    \n    .BaseOverlay__overlay-background {\n        position: absolute;\n    }\n    \n    .BaseOverlay__overlay-close-btn {\n        position: absolute;\n        top: 50px;\n        right: 50px;\n    }\n    \n    .BaseOverlay__overlay-title {\n        @extend .overlay-copy;\n        top: 50px;\n        font-size: 40px;\n        font-weight: bold;\n        color: #190E38;\n    }\n\nMy question is: in SimpleMessageOverlay.scss how the hell can I change the size/font/whatever of the title (BaseOverlay__overlay-title to be precise but I have no idea how to access that from the SimpleMessageOverlay class)? ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5oxzh4", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "SteLP", "media": null, "name": "t3_5oxzh4", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5oxzh4/override_a_css_div_property/", "locked": false, "stickied": false, "created": 1484876608.0, "url": "https://www.reddit.com/r/reactjs/comments/5oxzh4/override_a_css_div_property/", "author_flair_text": null, "quarantine": false, "title": "Override a CSS / Div property", "created_utc": 1484847808.0, "link_flair_text": null, "distinguished": null, "num_comments": 3, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "github.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5owjw7", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "lugovsky", "media": null, "name": "t3_5owjw7", "score": 0, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/hkC2ffHY4uUu35icW_tR5dmRcKjRBwZyeVf0MRXnIrE.jpg?s=19c880a151761399c02d36fc7d9c08d8", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/hkC2ffHY4uUu35icW_tR5dmRcKjRBwZyeVf0MRXnIrE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=dffb3f35d467eabd1d5eb88c0f464821", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/hkC2ffHY4uUu35icW_tR5dmRcKjRBwZyeVf0MRXnIrE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=898b403e37511fa46d79d453ffdd5675", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/hkC2ffHY4uUu35icW_tR5dmRcKjRBwZyeVf0MRXnIrE.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=95b2f3a4d9434afd3a8f12ced1f0a1cf", "width": 320, "height": 320}], "variants": {}, "id": "hu15rlP4keUh-syw1KkhddW6BHeuA0qa43S18PrLTOg"}]}, "thumbnail": "http://a.thumbs.redditmedia.com/gTMU7SAe5EhIVq5MoAbPRdZfsRHApluIVjnpKP9R6A0.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5owjw7/xpost_from_rreactnative_customizable_reactnative/", "locked": false, "stickied": false, "created": 1484861368.0, "url": "https://github.com/akveo/react-native-ui-kitten", "author_flair_text": null, "quarantine": false, "title": "X-Post from /r/reactnative: Customizable react-native component kit", "created_utc": 1484832568.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "scotch.io", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5owije", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "joey_php", "media": null, "name": "t3_5owije", "score": 0, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/pfp9weh_nGU6on35UFMjxSp7sSAktlGJMldoxUw5MbY.jpg?s=f153a1cf2d00dd15ec17270a216218dd", "width": 1200, "height": 500}, "resolutions": [{"url": "https://i.redditmedia.com/pfp9weh_nGU6on35UFMjxSp7sSAktlGJMldoxUw5MbY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=4a68593aa81dfb14019a158e2c7c191f", "width": 108, "height": 45}, {"url": "https://i.redditmedia.com/pfp9weh_nGU6on35UFMjxSp7sSAktlGJMldoxUw5MbY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=2c2291a5f4ddefb933eec7c499d7d337", "width": 216, "height": 90}, {"url": "https://i.redditmedia.com/pfp9weh_nGU6on35UFMjxSp7sSAktlGJMldoxUw5MbY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=cd3400ec61cf771a889416afd5d85981", "width": 320, "height": 133}, {"url": "https://i.redditmedia.com/pfp9weh_nGU6on35UFMjxSp7sSAktlGJMldoxUw5MbY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=6ea2f4e3d82aa96853c56615436cd316", "width": 640, "height": 266}, {"url": "https://i.redditmedia.com/pfp9weh_nGU6on35UFMjxSp7sSAktlGJMldoxUw5MbY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=a96d27a70dbea7c08f56961ae2a9f77b", "width": 960, "height": 400}, {"url": "https://i.redditmedia.com/pfp9weh_nGU6on35UFMjxSp7sSAktlGJMldoxUw5MbY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=dab72d4ee41226d35b0bb82cb32b429b", "width": 1080, "height": 450}], "variants": {}, "id": "NPk-x_A1BZfPJ64wQZQt40q6V9uTVBKUwkAanX9GP3E"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/uCTAyikyUhZLZkAs3ZeVeGyeKfsoM8KubZ3WAhWPACc.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5owije/learning_reactjs_getting_started_and_concepts/", "locked": false, "stickied": false, "created": 1484860844.0, "url": "https://scotch.io/tutorials/learning-react-getting-started-and-concepts", "author_flair_text": null, "quarantine": false, "title": "Learning React.js: Getting Started and Concepts", "created_utc": 1484832044.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "gist.github.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5ot8bx", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "utexas2013", "media": null, "name": "t3_5ot8bx", "score": 10, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/hzj9_uEfGkQlakXal7aVoC4zkcg_3a_lvjZCRRWAUXg.jpg?s=22f7ea29c4cd43ab13aa4782950b6d14", "width": 200, "height": 200}, "resolutions": [{"url": "https://i.redditmedia.com/hzj9_uEfGkQlakXal7aVoC4zkcg_3a_lvjZCRRWAUXg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=e7b8f16f090410e34cab5c2743bc1836", "width": 108, "height": 108}], "variants": {}, "id": "IfhZFcudp4WIUDsX6Ps5O4FcPN3XWKnpiDyNC3oQctg"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/jFw7P49O02ihZfsY_9YQEqANIukgPXpLv2WM_NP3cBY.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5ot8bx/reusable_component_to_warn_users_about_unsaved/", "locked": false, "stickied": false, "created": 1484813610.0, "url": "https://gist.github.com/mknabe/bfcb6db12ef52323954a28655801792d", "author_flair_text": null, "quarantine": false, "title": "Reusable component to warn users about unsaved changes to forms with redux-form", "created_utc": 1484784810.0, "link_flair_text": null, "distinguished": null, "num_comments": 1, "visited": false, "num_reports": null, "ups": 10}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "samulihaverinen.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5owbcx", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "joey_php", "media": null, "name": "t3_5owbcx", "score": 1, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Zbaw2i-HIhOrDyuuLqBgDN91YEYJOYSWIIIi6D_r_Xk.jpg?s=26d53fc2dd3d414faa2fbda9383590be", "width": 380, "height": 295}, "resolutions": [{"url": "https://i.redditmedia.com/Zbaw2i-HIhOrDyuuLqBgDN91YEYJOYSWIIIi6D_r_Xk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=dfe971d908d37dc2432be9f73a56fd2d", "width": 108, "height": 83}, {"url": "https://i.redditmedia.com/Zbaw2i-HIhOrDyuuLqBgDN91YEYJOYSWIIIi6D_r_Xk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=41bae59c8f229c926cbe10073438a628", "width": 216, "height": 167}, {"url": "https://i.redditmedia.com/Zbaw2i-HIhOrDyuuLqBgDN91YEYJOYSWIIIi6D_r_Xk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=8ad5cb32982051e596b1bc996f77716e", "width": 320, "height": 248}], "variants": {}, "id": "-ZHxswvtxuRGfOGOvaNsTCBO-cSayrHrNe5uRFOXUFI"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/VvDEqUWxphUz8wew3vk7l1ePiOpyw3E8x_MFdZX7VTw.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5owbcx/getting_started_with_react_typescript_and_aspnet/", "locked": false, "stickied": false, "created": 1484858106.0, "url": "http://www.samulihaverinen.com/web-development/dotnet/2016/01/04/getting-started-with-react-mvc6-typescript/", "author_flair_text": null, "quarantine": false, "title": "Getting started with React, TypeScript and ASP.NET 5 MVC 6", "created_utc": 1484829306.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "self.reactjs", "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I just wanted to see what everyone is using and what benefits they&amp;#39;ve gotten. I know a lot of this is up to personal preference but I think it&amp;#39;s important to know where some IDEs excel over others.&lt;/p&gt;\n\n&lt;p&gt;I personally am currently using Atom with Nuclide but wanted to see if anyone had any good things to say about VSCode.&lt;/p&gt;\n\n&lt;p&gt;Atom/Nuclide has been pretty straightforward so far, I generally don&amp;#39;t use the built in debugger. Code completion is alright but for the most part it does everything I need it to do. What about you?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I just wanted to see what everyone is using and what benefits they've gotten. I know a lot of this is up to personal preference but I think it's important to know where some IDEs excel over others.\n\nI personally am currently using Atom with Nuclide but wanted to see if anyone had any good things to say about VSCode.\n\nAtom/Nuclide has been pretty straightforward so far, I generally don't use the built in debugger. Code completion is alright but for the most part it does everything I need it to do. What about you?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5otnvv", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Parodyse", "media": null, "name": "t3_5otnvv", "score": 6, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": true, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5otnvv/what_ide_are_you_using/", "locked": false, "stickied": false, "created": 1484818401.0, "url": "https://www.reddit.com/r/reactjs/comments/5otnvv/what_ide_are_you_using/", "author_flair_text": null, "quarantine": false, "title": "What IDE are you using?", "created_utc": 1484789601.0, "link_flair_text": null, "distinguished": null, "num_comments": 65, "visited": false, "num_reports": null, "ups": 6}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "edu.techcus.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5ovpsn", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Helen791", "media": null, "name": "t3_5ovpsn", "score": 0, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/9r6Q5pFJuAdoGD0fcqpxA2j1-130OwdXEZfs8XGPtcU.jpg?s=562d11fc0e323757224464af49bd6391", "width": 750, "height": 422}, "resolutions": [{"url": "https://i.redditmedia.com/9r6Q5pFJuAdoGD0fcqpxA2j1-130OwdXEZfs8XGPtcU.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=6e8f0eb27495f6612fcf4cd1a0d48558", "width": 108, "height": 60}, {"url": "https://i.redditmedia.com/9r6Q5pFJuAdoGD0fcqpxA2j1-130OwdXEZfs8XGPtcU.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=634855d57cd4aa84371ebeaa20e926be", "width": 216, "height": 121}, {"url": "https://i.redditmedia.com/9r6Q5pFJuAdoGD0fcqpxA2j1-130OwdXEZfs8XGPtcU.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=3bf065322402a37ad8dc6af2d407b514", "width": 320, "height": 180}, {"url": "https://i.redditmedia.com/9r6Q5pFJuAdoGD0fcqpxA2j1-130OwdXEZfs8XGPtcU.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=ac94f25503978beeabe23d4a9dd1eeb8", "width": 640, "height": 360}], "variants": {}, "id": "NCY3xyYLLf2Udcagp3TdcQ7QicNBVx__GbTDYMDyy0A"}]}, "thumbnail": "http://a.thumbs.redditmedia.com/fix0BtTfYM_8NX4G3JOLqHBqNaOlt9chtnHVFHQKrd0.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5ovpsn/build_realtime_apps_react_js_golang_amp_rethinkdb/", "locked": false, "stickied": false, "created": 1484847728.0, "url": "https://edu.techcus.com/p/BJxgyneLx/build-realtime-apps-react-js-golang-and-rethinkdb/?utm_source=03", "author_flair_text": null, "quarantine": false, "title": "Build Realtime Apps | React Js, Golang &amp;amp; RethinkDB", "created_utc": 1484818928.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "thereformedprogrammer.net", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5ovj7t", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "php03", "media": null, "name": "t3_5ovj7t", "score": 0, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "thumbnail": "default", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5ovj7t/templates_for_building_reactjs_frontends_in/", "locked": false, "stickied": false, "created": 1484844288.0, "url": "http://www.thereformedprogrammer.net/templates-for-building-react-front-ends-in-asp-net-core-and-mvc5/", "author_flair_text": null, "quarantine": false, "title": "Templates for building React.js front-ends in ASP.NET Core and MVC5", "created_utc": 1484815488.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "appendto.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5ot3qv", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "kylebythemile", "media": null, "name": "t3_5ot3qv", "score": 5, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/oVm47acL9tW0d3R1X-YGevvp2jhmfjMpFX97eRQzYTg.jpg?s=54e3ce9adde80e35914e50abf79d7dc7", "width": 228, "height": 154}, "resolutions": [{"url": "https://i.redditmedia.com/oVm47acL9tW0d3R1X-YGevvp2jhmfjMpFX97eRQzYTg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=ccb3e94f6be4e9f051d8640690628dc8", "width": 108, "height": 72}, {"url": "https://i.redditmedia.com/oVm47acL9tW0d3R1X-YGevvp2jhmfjMpFX97eRQzYTg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=5aecfc8b09e42b3a6db8851c2ab00c72", "width": 216, "height": 145}], "variants": {}, "id": "gtr4QFhlpY_mbQKRisoarRPJz0wNMkH06SOfZvlites"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/qfzQ2GLLtbD-mYBPW3AqDgo-YbfMtViJvcN9zJMHedg.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5ot3qv/introduction_to_data_binding_with_mobx/", "locked": false, "stickied": false, "created": 1484812240.0, "url": "https://appendto.com/2017/01/introduction-to-data-binding-with-mobx/", "author_flair_text": null, "quarantine": false, "title": "Introduction to Data Binding with MobX", "created_utc": 1484783440.0, "link_flair_text": null, "distinguished": null, "num_comments": 0, "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"contest_mode": false, "banned_by": null, "domain": "medium.com", "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "saved": false, "id": "5oo2rj", "gilded": 0, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "trenchino", "media": null, "name": "t3_5oo2rj", "score": 92, "approved_by": null, "over_18": false, "removal_reason": null, "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/INSUp85z_rYYCJ-kpA5A1bouV4joeh2ql8kti27Hy1M.jpg?s=da6465ccba6a7bc40f2a11555e14cfd6", "width": 1200, "height": 800}, "resolutions": [{"url": "https://i.redditmedia.com/INSUp85z_rYYCJ-kpA5A1bouV4joeh2ql8kti27Hy1M.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=c6eb63a6b379ad947f979276f6d37bfa", "width": 108, "height": 72}, {"url": "https://i.redditmedia.com/INSUp85z_rYYCJ-kpA5A1bouV4joeh2ql8kti27Hy1M.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=3a9be5892925325ffc6764d3ce15c3fd", "width": 216, "height": 144}, {"url": "https://i.redditmedia.com/INSUp85z_rYYCJ-kpA5A1bouV4joeh2ql8kti27Hy1M.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=a1a673296914b6f6e9a647e4077c48af", "width": 320, "height": 213}, {"url": "https://i.redditmedia.com/INSUp85z_rYYCJ-kpA5A1bouV4joeh2ql8kti27Hy1M.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=8c8364377e482abe67e391ed451f9e06", "width": 640, "height": 426}, {"url": "https://i.redditmedia.com/INSUp85z_rYYCJ-kpA5A1bouV4joeh2ql8kti27Hy1M.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=6e7290c5a04d4b070c18a98065f7a7be", "width": 960, "height": 640}, {"url": "https://i.redditmedia.com/INSUp85z_rYYCJ-kpA5A1bouV4joeh2ql8kti27Hy1M.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=9d213e4306dd8c2ff24b6187dbc3e618", "width": 1080, "height": 720}], "variants": {}, "id": "gvELQGjDCeyKUgYha0YvK7CWYkTjl0E5rHX5ZipD59k"}]}, "thumbnail": "http://b.thumbs.redditmedia.com/urm4ENpR3NOnHXx0xzgahAAzMe-9WDPe82T-Qn3MTAk.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "mod_reports": [], "archived": false, "media_embed": {}, "post_hint": "link", "is_self": false, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/5oo2rj/webpack_2_out/", "locked": false, "stickied": false, "created": 1484754101.0, "url": "https://medium.com/webpack/webpack-2-2-the-final-release-76c3d43bf144#.wyiiadv0b", "author_flair_text": null, "quarantine": false, "title": "Webpack 2 out", "created_utc": 1484725301.0, "link_flair_text": null, "distinguished": null, "num_comments": 27, "visited": false, "num_reports": null, "ups": 92}}], "after": "t3_5oo2rj", "before": null}}